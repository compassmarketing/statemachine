#!/usr/bin/env python2.7
import subprocess
import os, sys
import logging
import time
import argparse
import uuid

import boto3

parser = argparse.ArgumentParser()
parser.add_argument("stateMachineArn")
parser.add_argument("payload")
args = parser.parse_args()

logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.INFO)

client = boto3.client('stepfunctions', region_name='us-east-1')

logging.info("Running step function {}".format(args.stateMachineArn))

payload = open(args.payload, 'r').read()

process_id = uuid.uuid4().hex

response = client.start_execution(
    stateMachineArn=args.stateMachineArn,
    name=process_id,
    input=payload
)

timeout = time.time() + 1800 # 20 mintue timeout

while(True):
    if(time.time() > timeout):
        raise Exception("Timeout!")

    job_info = client.describe_execution(executionArn=response['executionArn'])
    status = job_info['status']

    logging.info("Status: {}".format(status))

    if (status == 'SUCCEEDED'):
        sys.exit(0)
    elif (status == 'FAILED' or status == 'TIMED_OUT' or status == 'ABORTED'):
        sys.exit(1)
    else:
        time.sleep(5)
